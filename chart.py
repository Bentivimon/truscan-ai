import matplotlib.pyplot as plt
import pandas as pd

# Дані для моделей
models_data = {
    "EfficientNet": [
        (0, 0.563, 0.5), (1, 0.602, 0.583), (2, 0.609, 0.597),
        (3, 0.704, 0.625),
        (4, 0.764, 0.611),
        (5, 0.782, 0.583),
        (6, 0.813, 0.569),
        (7, 0.842, 0.597),
        (8, 0.845, 0.583),
        (9, 0.891, 0.597),
        (10, 0.877, 0.583),
        (11, 0.891, 0.583),
        (12, 0.891, 0.597),
        (13, 0.891, 0.597),
        (14, 0.898, 0.597),
        (15, 0.93, 0.597)
    ],
    "FaceNet": [
        (0, 0.479, 0.472),
        (1, 0.592, 0.514),
        (2, 0.585, 0.528),
        (3, 0.782, 0.542),
        (4, 0.806, 0.583),
        (5, 0.852, 0.625),
        (6, 0.887, 0.625),
        (7, 0.898, 0.625),
        (8, 0.937, 0.583),
        (9, 0.94, 0.639),
        (10, 0.912, 0.639),
        (11, 0.954, 0.639),
        (12, 0.926, 0.653),
        (13, 0.933, 0.611),
        (14, 0.93, 0.611),
        (15, 0.947, 0.611)
    ],
    "Inception": [
        (0, 0.489, 0.514),
        (1, 0.634, 0.528),
        (2, 0.729, 0.542),
        (3, 0.789, 0.583),
        (4, 0.838, 0.597),
        (5, 0.866, 0.639),
        (6, 0.87, 0.597),
        (7, 0.887, 0.597),
        (8, 0.894, 0.597),
        (9, 0.908, 0.611),
        (10, 0.915, 0.569),
        (11, 0.93, 0.569),
        (12, 0.884, 0.569),
        (13, 0.933, 0.569),
        (14, 0.919, 0.569),
        (15, 0.944, 0.569)
    ],
    "ResNet50": [
        (0, 0.539, 0.597),
        (1, 0.658, 0.639),
        (2, 0.803, 0.611),
        (3, 0.838, 0.611),
        (4, 0.88, 0.486),
        (5, 0.905, 0.569),
        (6, 0.905, 0.569),
        (7, 0.933, 0.611),
        (8, 0.954, 0.611),
        (9, 0.951, 0.611),
        (10, 0.94, 0.667),
        (11, 0.954, 0.639),
        (12, 0.975, 0.653),
        (13, 0.986, 0.667),
        (14, 0.986, 0.639),
        (15, 0.975, 0.681)
    ],
    "Xception": [
        (0, 0.486, 0.556),
        (1, 0.63, 0.667),
        (2, 0.764, 0.597),
        (3, 0.806, 0.597),
        (4, 0.831, 0.556),
        (5, 0.873, 0.542),
        (6, 0.898, 0.611),
        (7, 0.926, 0.611),
        (8, 0.912, 0.611),
        (9, 0.915, 0.611),
        (10, 0.919, 0.583),
        (11, 0.94, 0.569),
        (12, 0.919, 0.569),
        (13, 0.944, 0.569),
        (14, 0.926, 0.569),
        (15, 0.947, 0.569)
    ]
}

# Побудова графіку
plt.figure(figsize=(12, 8))
for model, data in models_data.items():
    epochs, acc, val_acc = zip(*data)
    plt.plot(epochs, acc, label=f"{model} - Training")
    plt.plot(epochs, val_acc, linestyle='dashed', label=f"{model} - Validation")

plt.xlabel("Epochs", fontsize=16)
plt.ylabel("Accuracy", fontsize=16)
plt.title("Training and Validation Accuracy for Different Models", fontsize=18)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
plt.legend(fontsize=12)
plt.grid(True)
plt.show()




# Дані для моделей
loss_models_data = {
    "EfficientNet": [
        (0, 0.739, 0.695),
        (1, 0.672, 0.691),
        (2, 0.636, 0.684),
        (3, 0.549, 0.678),
        (4, 0.494, 0.686),
        (5, 0.477, 0.677),
        (6, 0.426, 0.722),
        (7, 0.369, 0.754),
        (8, 0.324, 0.814),
        (9, 0.286, 0.854),
        (10, 0.273, 0.956),
        (11, 0.302, 0.989),
        (12, 0.252, 0.962),
        (13, 0.251, 0.982),
        (14, 0.229, 0.976),
        (15, 0.197, 1.002),
    ],
    "FaceNet": [
        (0, 0.747, 0.713),
        (1, 0.688, 0.722),
        (2, 0.666, 0.739),
        (3, 0.527, 0.772),
        (4, 0.427, 0.741),
        (5, 0.329, 1.127),
        (6, 0.278, 1.31),
        (7, 0.29, 1.504),
        (8, 0.191, 1.848),
        (9, 0.184, 1.83),
        (10, 0.189, 2.011),
        (11, 0.157, 1.938),
        (12, 0.206, 1.806),
        (13, 0.204, 2.046),
        (14, 0.202, 1.982),
        (15, 0.161, 1.91),
    ],
    "Inception": [
        (0, 0.768, 0.713),
        (1, 0.663, 0.771),
        (2, 0.585, 0.784),
        (3, 0.471, 0.806),
        (4, 0.385, 0.828),
        (5, 0.37, 0.799),
        (6, 0.333, 0.9),
        (7, 0.29, 0.929),
        (8, 0.259, 0.932),
        (9, 0.246, 0.972),
        (10, 0.216, 0.983),
        (11, 0.176, 1.015),
        (12, 0.272, 1.043),
        (13, 0.157, 1.066),
        (14, 0.196, 1.072),
        (15, 0.17, 1.089)
    ],
    "ResNet50": [
        (0, 0.693, 0.679),
        (1, 0.642, 0.674),
        (2, 0.541, 0.69),
        (3, 0.415, 0.834),
        (4, 0.32, 1.292),
        (5, 0.256, 1.029),
        (6, 0.247, 1.143),
        (7, 0.188, 1.125),
        (8, 0.172, 1.154),
        (9, 0.154, 1.162),
        (10, 0.173, 1.014),
        (11, 0.138, 0.969),
        (12, 0.115, 0.992),
        (13, 0.087, 0.998),
        (14, 0.079, 1.042),
        (15, 0.109, 1.029)
    ],
    "Xception": [
        (0, 0.78, 0.673),
        (1, 0.639, 0.644),
        (2, 0.51, 0.663),
        (3, 0.501, 0.666),
        (4, 0.373, 0.761),
        (5, 0.3, 0.833),
        (6, 0.281, 0.805),
        (7, 0.21, 0.817),
        (8, 0.252, 0.837),
        (9, 0.212, 0.872),
        (10, 0.188, 0.966),
        (11, 0.153, 1.006),
        (12, 0.186, 1.03),
        (13, 0.143, 1.066),
        (14, 0.178, 1.1),
        (15, 0.14, 1.124)
    ]
}

# Побудова графіку
plt.figure(figsize=(12, 8))
for model, data in loss_models_data.items():
    epochs, loss, val_loss = zip(*data)
    plt.plot(epochs, loss, label=f"{model} - Training")
    plt.plot(epochs, val_loss, linestyle='dashed', label=f"{model} - Validation")

plt.xlabel("Epochs", fontsize=16)
plt.ylabel("Loss", fontsize=16)
plt.title("Training and Validation Loss for Different Models", fontsize=18)
plt.xticks(fontsize=14)
plt.yticks(fontsize=14)
plt.legend(fontsize=12)
plt.grid(True)
plt.show()
